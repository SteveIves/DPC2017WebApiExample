
import System
import System.Net
import System.Net.Http
import System.Collections.ObjectModel
import System.Threading.Tasks
import Newtonsoft.Json

namespace TestClientWpf

	;;; <summary>
	;;; This is an example of a class that implements client functionality to an Asp .NET Web API service.
	;;; </summary>
	public class EmployeeServiceClient

		;; Define the base URL where the service is running
		private const baseUrl, string, "http://localhost/WebServer/api/employee"

		;;; <summary>
		;;; Returns a collection of all employees.
		;;; </summary>
		;;; <returns>Collection of Employee objects</returns>
		public async method GetAllEmployees, @Task<ObservableCollection<Employee>>
		proc
			mreturn await doGetMultiple(baseUrl)
		endmethod

		;;; <summary>
		;;; Returns a collection of all employees with a specified last name.
		;;; </summary>
		;;; <param name="name">Last name to search for</param>
		;;; <returns>Collection of Employee objects</returns>
		public async method GetEmployeesByLastName, @Task<ObservableCollection<Employee>>
			required in name, string
		proc
			data url = String.Format("{0}/last_name/{1}",baseUrl,name)
			mreturn await doGetMultiple(url)
		endmethod
	
		;;; <summary>
		;;; Returns a collection of all employees in a specified state.
		;;; </summary>
		;;; <param name="state">Two-digit US state code</param>
		;;; <returns>Collection of Employee objects</returns>
		public async method GetEmployeesInState, @Task<ObservableCollection<Employee>>
			required in state, string
		proc
			data url = String.Format("{0}/state/{1}",baseUrl,state.ToUpper())
			mreturn await doGetMultiple(url)
		endmethod
	
		;;; <summary>
		;;; Returns a collection of all employees in a specified zip code.
		;;; </summary>
		;;; <param name="zip">Zip code to search for</param>
		;;; <returns>Collection of Employee objects</returns>
		public async method GetEmployeesInZipCode, @Task<ObservableCollection<Employee>>
			required in zip, string
		proc
			data url = String.Format("{0}/zip/{1}",baseUrl,zip)
			mreturn await doGetMultiple(url)
		endmethod
	
		;;; <summary>
		;;; A private helper method that can be used to call any GET operation that
		;;; returns a collection of Employee objects.
		;;; </summary>
		private async method doGetMultiple, @Task<ObservableCollection<Employee>>
			required in url, string
		proc
			disposable data client = new HttpClient()

			disposable data request = new HttpRequestMessage()
			request.RequestUri = new Uri(url)
			request.Method = HttpMethod.Get

			disposable data response = await client.SendAsync(request)

			if (response.StatusCode == HttpStatusCode.NotFound)
				mreturn new ObservableCollection<Employee>()

			data json = await response.Content.ReadAsStringAsync()
			mreturn JsonConvert.DeserializeObject<ObservableCollection<Employee>>(json)
		endmethod

	endclass


endnamespace
